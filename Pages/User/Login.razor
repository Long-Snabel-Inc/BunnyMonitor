@page "/User/Login"
@inject AccountService AccountService
@inject NavigationManager NavMan

<EditForm Model=User OnValidSubmit=HandleValidSubmit>
    <div class="row">
        <div class="col col-2">
            <label for="userName">Username</label>
        </div>
        <div class="col">
            <InputText class="form-control" name="userName" id="userName" @bind-Value=User.UserName />
        </div>
    </div>
    <br /><br />
    <div class="row">
        <div class="col col-2">
            <label for="password">Password</label>
        </div>
        <div class="col">
            <InputText class="form-control" type="password" name="password" id="password" @bind-Value=User.Password />
        </div>
    </div>
    <br /><br />

    <button type="submit" class="btn btn-success">Login</button>
</EditForm>
<small class="alert-warning">@Warning</small>

@code {
    protected Models.Login User { get; set; } = new();

    protected string Warning;

    protected async Task HandleValidSubmit()
    {
        var success = await AccountService.Login(User);
        if (success)
        {
            NavMan.NavigateTo("/", true);
        }
        else
        {
            Warning = "Wrong Username or password";
        }
    }
}
